import java.sql.PreparedStatement;
import com.datamelt.db.Project;
import com.datamelt.db.RuleGroup;
import com.datamelt.db.RuleSubgroup;
import com.datamelt.db.RuleGroupAction;
import com.datamelt.db.Rule;
import com.datamelt.db.Activity;
import com.datamelt.db.DbCollections;

writeaction="true"; 
cancelled= request.getParameter("submit");

projectid=Long.parseLong(request.getParameter("projectid"));

if(cancelled.equals("delete project"))
{
	Project project = new Project();
	project.setConnection(connection);
	project.setId(projectid);
	project.load();
	PreparedStatement ps = connection.getPreparedStatement(Project.DELETE_SQL);
	project.delete(ps, user);
	
	DbCollections.deleteUserHistory(connection, "project", project.id, user);
	
	ArrayList rulegroups = DbCollections.getAllRuleGroups(connection,projectid);
	
	for(int k=0;k<rulegroups.size();k++)
	{
		RuleGroup rulegroup = rulegroups.get(k);
		
		ArrayList subgroups = DbCollections.getAllRuleSubgroups(connection,rulegroup.id);
		for(int i=0;i<subgroups.size();i++)
		{
			RuleSubgroup subgroup = subgroups.get(i);
			for(int f;f<subgroup.rules.size();f++)
			{
				Rule rule = subgroup.rules.get(f);
				PreparedStatement psRule = connection.getPreparedStatement(Rule.DELETE_SQL);
				rule.delete(psRule,project,user);
				
				DbCollections.deleteUserHistory(connection, "rule", rule.id, user);
			}
			PreparedStatement psRuleSubgroup = connection.getPreparedStatement(RuleSubgroup.DELETE_SQL);
			subgroup.delete(psRuleSubgroup,project,user);
			
			DbCollections.deleteUserHistory(connection, "rulesubgroup", subgroup.id, user);
		}
		
		ArrayList actions = DbCollections.getAllRuleGroupActions(connection,rulegroup.id);
		for(int f=0;f<actions.size();f++)
		{
			RuleGroupAction action = actions.get(f);
			PreparedStatement psAction = connection.getPreparedStatement(RuleGroupAction.DELETE_SQL);
			action.delete(psAction,project,user);
			
			DbCollections.deleteUserHistory(connection, "action", action.id, user);
		}
	
		PreparedStatement ps = connection.getPreparedStatement(RuleGroup.DELETE_SQL);
		rulegroup.delete(ps,project,user);
		
		DbCollections.deleteUserHistory(connection, "rulegroup", rulegroup.id, user);
		DbCollections.deleteReferenceFields(connection, project.id);
	}

	Activity activity = new Activity();
	activity.connection = connection;
	activity.user = user;
	activity.message = "Deleted project [" + project.name +"], description [" + project.description +"] and all related items";
	activity.insert(connection.getPreparedStatement(Activity.INSERT_SQL));
}
		
ArrayList list = DbCollections.getAllProjects(connection,user);
context.put("projects",list);

templatename="listprojects.vm";